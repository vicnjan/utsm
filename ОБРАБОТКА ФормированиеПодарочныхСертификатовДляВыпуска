Перем ХарНоминал экспорт;
Перем ХарНомер экспорт;
Перем ХарДата экспорт;

Перем свНоминал Экспорт;

функция СоздатьНоминал(Номинал) Экспорт
	 спНоминал=Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
	 спНоминал.Наименование = Формат(Номинал,"ЧЦ=20; ЧДЦ=0; ЧГ=0");
	 спНоминал.Владелец = харНоминал;
	 спНоминал.Записать();
	 свНоминал = спНоминал.ссылка;

	 Возврат  спНоминал.ссылка;
КонецФункции	

функция НайтиСоздатьНоминал(Номинал) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец = &Владелец
	|	И (НЕ ЗначенияСвойствОбъектов.ПометкаУдаления)
	|	И ЗначенияСвойствОбъектов.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Владелец",харНоминал);
	Запрос.УстановитьПараметр("Наименование",Формат(Номинал,"ЧЦ=20; ЧДЦ=0; ЧГ=0"));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Возврат Выборка.Ссылка;
	Иначе	
		
		спНоминал=Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
		спНоминал.Наименование = Формат(Номинал,"ЧЦ=20; ЧДЦ=0; ЧГ=0");
		спНоминал.Владелец = харНоминал;
		спНоминал.Записать();
		свНоминал = спНоминал.ссылка;
		
		Возврат  спНоминал.ссылка;
	КонецЕсли;
КонецФункции	


функция ПроверитьХарактеристикуПоПараметрам(стрПС) экспорт
	Проверка = Истина;
	//Сначала проверим по номеру 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Свойство = &Номер
	|	И ЗначенияСвойствОбъектов.Значение = &знНомер";
	Запрос.УстановитьПараметр("Номер",ХарНомер);
	Запрос.УстановитьПараметр("знНомер",стрПс.НомерШК);
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Сообщить("Номер сертификата "+стрПс.НомерШК+" уже установлен для сертификата " +Строка(Выборка.объект.владелец),СтатусСообщения.Внимание);
		Возврат ЛОжь;
	КонецЕсли;	
	
	////теперь проверим по штрих-коду
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтрихКоды.Владелец,
	|	ШтрихКоды.Штрихкод
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК ШтрихКоды
	|ГДЕ
	|	ШтрихКоды.Штрихкод = &знШК
	|	И ШтрихКоды.ТипШтрихкода = Значение(ПланВидовХарактеристик.ТипыШтрихкодов.Code39)";

	Запрос.УстановитьПараметр("знШК",стрПс.НомерШК);
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Сообщить("Номер сертификата "+стрПс.НомерШК+" уже установлен для номенклатуры " +Строка(Выборка.объект.владелец),СтатусСообщения.Внимание);
		Возврат ложь;
	КонецЕсли;	

	
	//а теперь по характеристике
	
	Запрос=Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец = &харНоминал
	|	И ЗначенияСвойствОбъектов.Наименование = &НоминалЗнач";
	Запрос.УстановитьПараметр("харНоминал",ХарНоминал);
	Запрос.УстановитьПараметр("НоминалЗнач",Формат(стрПС.Номинал,"ЧЦ=20; ЧДЦ=0; ЧГ=0"));
	Выборка = запрос.Выполнить().Выбрать();
	Если не Выборка.Следующий() тогда
		свНоминал = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка();
		Возврат Истина;
	Иначе
		СвНоминал = Выборка.Ссылка;
	КонецЕсли;	
	
    Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	свДата.Значение КАК ДатаОкончания,
	|	свНоминал.Значение КАК Номинал,
	|	свНомер.Значение КАК Номер,
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗначенияСвойствОбъектов.Объект КАК Объект,
	|			ЗначенияСвойствОбъектов.Значение КАК Значение
	|		ИЗ
	|			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ГДЕ
	|			ЗначенияСвойствОбъектов.Свойство.Наименование = ""Номинал""
	|			И ЗначенияСвойствОбъектов.Значение = &Номинал) КАК свНоминал
	|		ПО ХарактеристикиНоменклатуры.Ссылка = свНоминал.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗначенияСвойствОбъектов.Объект КАК Объект,
	|			ЗначенияСвойствОбъектов.Значение КАК Значение
	|		ИЗ
	|			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ГДЕ
	|			ЗначенияСвойствОбъектов.Свойство = &харДата
	|			И ЗначенияСвойствОбъектов.Значение = &Дата) КАК свДата
	|		ПО ХарактеристикиНоменклатуры.Ссылка = свДата.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗначенияСвойствОбъектов.Объект КАК Объект,
	|			ЗначенияСвойствОбъектов.Значение КАК Значение
	|		ИЗ
	|			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ГДЕ
	|			ЗначенияСвойствОбъектов.Свойство =&ХарНомер
	|			И ЗначенияСвойствОбъектов.Значение = &Номер) КАК свНомер
	|		ПО ХарактеристикиНоменклатуры.Ссылка = свНомер.Объект
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец",стрПС.ПодарочныйСертификат);
	Запрос.УстановитьПараметр("Дата",стрПС.ДатаОкончания);
	Запрос.УстановитьПараметр("Номер",стрПС.НомерШК);
	Запрос.УстановитьПараметр("Номинал",свНоминал);
	Запрос.УстановитьПараметр("ХарНомер",ХарНомер);
    Запрос.УстановитьПараметр("ХарДата",ХарДата);

	Выборка = запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Если ЗначениеЗаполнено(Выборка.номинал) и  ЗначениеЗаполнено(Выборка.номер) и ЗначениеЗаполнено(Выборка.ссылка) тогда
		Сообщить("Для номенклатуры "+Строка(стрПС.ПодарочныйСертификат)+" уже есть характеристика параметрами: номер - "+ стрПС.НомерШК+
				", номинал - "+строка(свНоминал)+", дата окончания - "+Формат(стрПС.ДатаОкончания,"ДФ=dd.MM.yyyy; ДП='Нет даты'"),СтатусСообщения.Внимание );
		Возврат Ложь;
		Иначе
		   Возврат Истина;
		КонецЕсли;
	Иначе
		Возврат Истина;
	КонецЕсли;	
		
конецфункции

процедура записатьХарактеристики(УстанавливатьЦены, РозничнаяЦена) экспорт
	Если не УТСМ.ПроверкаРегистрацииКлюча() тогда
		Предупреждение("Обработка предназначена для зарегистирированных пользователей модуля УТСМ!");
		Возврат;
	КонецЕсли;	
	
	Если не( ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 или  ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихкодов.Code39) тогда
		Предупреждение ("Предусмотрена работа только с EAN13 или Code39!");
		возврат;
	КонецЕсли;
	
	ТаблицаЗначенийСвойств=Новый ТаблицаЗначений;
	ТаблицаЗначенийСвойств.Колонки.Добавить("Значение");
	ТаблицаЗначенийСвойств.Колонки.Добавить("Свойство");

	Если  УстанавливатьЦены и Не ЗначениеЗаполнено(РозничнаяЦена) тогда 
		Если  ОбщегоНазначения.ЗадатьВопрос("Не выбран тип розничной цены. Документ ""Установка цен номенклтуры"" создаваться не будет. Продолжить?") Тогда
			СоздаватьЦены = Ложь;
		Иначе
			Возврат;
		КонецЕсли;
		
	Иначе
		СоздаватьЦены= УстанавливатьЦены;
	КонецЕсли;	
	
	Если СоздаватьЦены тогда 
		Док						= Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
		Док.Ответственный 		= глЗначениеПеременной("глТекущийПользователь");
		Док.Дата 				= НачалоДня(ОбщегоНазначения.ПолучитьРабочуюДату());
		Док.Комментарий     	= "Создан автоматически при записи характеристик сертификатов";
		НоваяСтрокаЦены     	= Док.ТипыЦен.Добавить();
		НоваяСтрокаЦены.ТипЦен 	= РозничнаяЦена;
		
		ТекущийНомер = 0;
	КонецЕсли;	
		
	Для каждого стрПС из ПодарочныеСертификаты цикл
		Если ПроверитьХарактеристикуПоПараметрам(стрПС) тогда
			ТаблицаЗначенийСвойств.Очистить();
			спрХар =  Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
			спрХар.Владелец = стрПС.подарочныйСертификат;
			стрТаб=ТаблицаЗначенийСвойств.Добавить();
			стрТаб.значение = стрПС.ДатаОкончания;
			стрТаб.Свойство = ХарДата;
			стрТаб=ТаблицаЗначенийСвойств.Добавить();
			стрТаб.значение = стрПС.НомерШК ;
			стрТаб.Свойство = ХарНомер;
			стрТаб=ТаблицаЗначенийСвойств.Добавить();
			стрТаб.Свойство = ХарНоминал;
			//Если ЗначениеЗаполнено(СвНоминал) тогда
			//	 стрТаб.значение = свНоминал;
			//Иначе
				 стрТаб.значение = НайтиСоздатьНоминал(стрпс.Номинал);
			//КонецЕсли;
			спрХар.Наименование = спрхар.СформироватьНаименование(ТаблицаЗначенийСвойств); 
			спрХар.Записать();
			//Создаем значения свойств
			записьРС =  РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Записьрс.Объект =спрХар.ссылка;
			записьРС.Свойство = ХарНоминал;
			записьРС.Значение =  свНоминал;
			записьРС.Записать();
			
			записьРС =  РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Записьрс.Объект =спрХар.ссылка;
			записьРС.Свойство = ХарДата;
			записьРС.Значение =  стрПС.ДатаОкончания;
			записьРС.Записать();

			записьРС =  РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Записьрс.Объект =спрХар.ссылка;
			записьРС.Свойство = ХарНомер;
			записьРС.Значение =  стрПС.НомерШК;
			записьРС.Записать();

			//создаем Штрих-Код;
		    записьШК = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
			записьШК.Владелец = стрПС.ПодарочныйСертификат;
			записьШк.ХарактеристикаНоменклатуры = спрХар.ссылка;
			Если ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихкодов.Code39 тогда
				записьШК.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.Code39;
				записьШК.Штрихкод = стрПС.ШтрихКод;
				//стрПС.ШК =стрПС.НомерШК;
			Иначе
				записьШК.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
				записьШК.Штрихкод = стрПС.ШтрихКод;
				//стрПС.ШК =записьШК.Штрихкод;
			КонецЕсли;
			записьШК.ЕдиницаИзмерения =  стрПС.ПодарочныйСертификат.ЕдиницаХраненияОстатков;
			записьШК.Качество = Справочники.Качество.Новый;
			Записьшк.Записать();
			Сообщить("Созданы характеристика и штрих-код '"+строка(спрХар.ссылка)+"' для "+строка(стрПС.ПодарочныйСертификат),СтатусСообщения.Информация);
			
			//Заполняем документ установки цен номенклатуры
			Если СоздаватьЦены тогда
				НоваяСтрока = Док.Товары.Добавить();		
				
				НоваяСтрока.Номенклатура               = стрПС.ПодарочныйСертификат;
				НоваяСтрока.ХарактеристикаНоменклатуры = спрХар.ссылка;
				
				НоваяСтрока.ТипЦен                     = РозничнаяЦена;
				НоваяСтрока.ИндексСтрокиТаблицыЦен     = ТекущийНомер;
				
				ТекущийНомер = ТекущийНомер + 1;
				
				НоваяСтрока.Валюта                     = РозничнаяЦена.ВалютаЦены;
				НоваяСтрока.ЕдиницаИзмерения           = стрПС.ПодарочныйСертификат.ЕдиницаДляОтчетов;
				НоваяСтрока.Цена                       = Число(свНоминал.Наименование);
			КонецЕсли;	
		Иначе
			Сообщить("Строка номер "+строка(стрПС.НомерСтроки)+"при записи характеристик пропущена.", статуссообщения.Внимание);
			Если СоздаватьЦены тогда
				НоваяСтрока = Док.Товары.Добавить();		
				
				НоваяСтрока.Номенклатура               = стрПС.ПодарочныйСертификат;
				НоваяСтрока.ХарактеристикаНоменклатуры = спрХар.ссылка;
				
				НоваяСтрока.ТипЦен                     = РозничнаяЦена;
				НоваяСтрока.ИндексСтрокиТаблицыЦен     = ТекущийНомер;
				
				ТекущийНомер = ТекущийНомер + 1;
				
				НоваяСтрока.Валюта                     = РозничнаяЦена.ВалютаЦены;
				НоваяСтрока.ЕдиницаИзмерения           = стрПС.ПодарочныйСертификат.ЕдиницаДляОтчетов;
				НоваяСтрока.Цена                       = Число(свНоминал.Наименование);
			КонецЕсли;	

		КонецЕсли;
		
	КонецЦикла;	
	Сообщить("Формирование и запись в базу характеристик и штрих-кодов завершена",СтатусСообщения.Информация);
	Если СоздаватьЦены тогда
		Док.Записать();
		ФормаДокумента=Док.ПолучитьФорму("ФормаДокумента");
		ФормаДокумента.ЭлементыФормы.ТаблицаЦен.колонки.ХарактеристикаНоменклатуры.видимость=Истина;
		ФормаДокумента.ОткрытьМодально();
	КОнецЕсли;	
конецПроцедуры

Функция СформироватьШтрихКод(Номер="") Экспорт

	ПрефиксШтучногоТовара = СокрЛП(Константы.ПрефиксШтучногоТовара.Получить());
	ПрефиксВнутреннегоШтрихкода = Константы.ПрефиксВнутреннегоШтрихкода.Получить();
	ПрефиксШтучногоТовара = ?(ПустаяСтрока(ПрефиксШтучногоТовара), "0", ПрефиксШтучногоТовара);
	ПрефиксВнутреннегоШтрихкода = Формат(ПрефиксВнутреннегоШтрихкода, "ЧЦ=2; ЧН=; ЧВН=");

	//Запрос = Новый Запрос("
	//|ВЫБРАТЬ
	//|	МАКСИМУМ(ПОДСТРОКА(РегШтрихКоды.Штрихкод, 5, 8)) КАК Код
	//|ИЗ
	//|	РегистрСведений.ШтрихКоды КАК РегШтрихКоды
	//|ГДЕ
	//|	РегШтрихКоды.ТипШтрихкода = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыШтрихкодов.EAN13)
	//|	И РегШтрихКоды.Штрихкод ПОДОБНО ""2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + "_________""
	//|");

	//Выборка = Запрос.Выполнить().Выбрать();
	//Выборка.Следующий();
	//Код = Сред(Номер,4,11);
	//ТекКод = ?(Код ="", 1, Мин(Код , 99999999));

	Штрихкод = "2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + Формат(Число(Номер), "ЧЦ=8; ЧВН=; ЧГ=");
	Штрихкод = Штрихкод + РаботаСТорговымОборудованием.КонтрольныйСимволEAN(ШтрихКод, 13);

	Возврат Штрихкод;

КонецФункции // СформироватьШтрихКод()


Функция СформироватьШтрихКод2(Номер="") Экспорт

	ПрефиксШтучногоТовара = СокрЛП(Константы.ПрефиксШтучногоТовара.Получить());
	ПрефиксВнутреннегоШтрихкода = Константы.ПрефиксВнутреннегоШтрихкода.Получить();
	ПрефиксШтучногоТовара = ?(ПустаяСтрока(ПрефиксШтучногоТовара), "0", ПрефиксШтучногоТовара);
	ПрефиксВнутреннегоШтрихкода = Формат(ПрефиксВнутреннегоШтрихкода, "ЧЦ=2; ЧН=; ЧВН=");

	//Запрос = Новый Запрос("
	//|ВЫБРАТЬ
	//|	МАКСИМУМ(ПОДСТРОКА(РегШтрихКоды.Штрихкод, 5, 8)) КАК Код
	//|ИЗ
	//|	РегистрСведений.ШтрихКоды КАК РегШтрихКоды
	//|ГДЕ
	//|	РегШтрихКоды.ТипШтрихкода = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыШтрихкодов.EAN13)
	//|	И РегШтрихКоды.Штрихкод ПОДОБНО ""2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + "_________""
	//|");

	//Выборка = Запрос.Выполнить().Выбрать();
	//Выборка.Следующий();
	//Код = Сред(Номер,4,11);
	//ТекКод = ?(Код ="", 1, Мин(Код , 99999999));

	Штрихкод = "9" + "9" + ПрефиксВнутреннегоШтрихкода + Формат(Число(Номер), "ЧЦ=8; ЧВН=; ЧГ=");
	Штрихкод = Штрихкод + РаботаСТорговымОборудованием.КонтрольныйСимволEAN(ШтрихКод, 13);

	Возврат Штрихкод;

КонецФункции // СформироватьШтрихКод()


Процедура ПодарочныйСертификатВыбор(Элемент, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	//Если не УТСМ.ПроверкаРегистрацииКлюча() тогда
	//	Предупреждение("Обработка предназначена для зарегистирированных пользователей модуля УТСМ!");
	//	Возврат;
	//КонецЕсли;	
	
	Если не УТСМ.ПроверкаРегистрацииКлюча()  Тогда
		Предупреждение("Обработка предназначена для зарегистирированных пользователей модуля УТСМ!") ;
		Возврат;
	КонецЕсли; 
	//Перем ЗначениеОтбораТипаОплаты;
	
	СписокЗначенийОтбора = Новый СписокЗначений();
	СписокЗначенийОтбора.Добавить(Справочники.Номенклатура.РазовыйСрочный);
	СписокЗначенийОтбора.Добавить(Справочники.Номенклатура.РазовыйБесСрочный);	
    СписокЗначенийОтбора.Добавить(Справочники.Номенклатура.МногоРазовыйСрочный);
	СписокЗначенийОтбора.Добавить(Справочники.Номенклатура.МногоРазовыйБессрочный);
	
	

	ФормаВыбора = Справочники.Номенклатура.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.ПараметрВыборГруппИЭлементов = Элемент.ВыборГруппИЭлементов;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
	ЭлементОтбора = ФормаВыбора.СправочникСписок.Отбор.ссылка;   
	
	ЭлементОтбора.ВидСравнения = ВидСравнения.ВСписке;
	ЭлементОтбора.Значение = СписокЗначенийОтбора;
	ЭлементОтбора.Использование = Истина;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ссылка.Доступность = Ложь;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.ТекущаяСтрока = Элемент.Значение;

	ФормаВыбора.Открыть();

КонецПроцедуры

Процедура ПечатьСписка() экспорт
	Если не УТСМ.ПроверкаРегистрацииКлюча() тогда
		Предупреждение("Обработка предназначена для зарегистирированных пользователей модуля УТСМ!");
		Возврат;
	КонецЕсли;	
	
	Макет =  ПолучитьМакет("СписокСертификатов");
	ТабДок = новый ТабличныйДокумент;
	
	ОбластьМ = Макет.ПолучитьОбласть("Шапка");
	ОбластьМ.Параметры.Дата = ФОрмат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(ОбластьМ);
	
	ОбластьМ = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(ОбластьМ);        

	ОбластьМ = Макет.ПолучитьОбласть("СтрокаТаб");
	Для каждого стрПс из ПодарочныеСертификаты цикл
		//Если ПроверитьХарактеристикуПоПараметрам(стрПС) тогда
			
			ОбластьМ.Параметры.Заполнить(стрПс);  
			ТабДок.Вывести(ОбластьМ);
			
		//Иначе
		//	Сообщить("Строка номер "+строка(стрПс.НомерСтроки)+" пропущена",СтатусСообщения.Внимание)	;
		//КонецЕсли;
	КонецЦикла ;       
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.Показать();
КонецПроцедуры


ХарНоминал= ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Номинал",Истина);
Если Не ЗначениеЗаполнено(ХарНоминал) тогда
   НовоеХар = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
   НовоеХар.Наименование = "Номинал";
   
   КД = Новый КвалификаторыЧисла(10,0,ДопустимыйЗнак.Неотрицательный);
   Массив = Новый Массив;
   Массив.Добавить(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"));
   НовоеХар.ТипЗначения =  Новый ОписаниеТипов(Массив,,Кд);
   
   НовоеХар.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры;
   
   НовоеХар.Записать();
   ХарНоминал =НовоеХар.Ссылка;
КонецЕсли;

ХарНомер= ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Номер сертификата",Истина);
Если Не ЗначениеЗаполнено(ХарНомер) тогда
// создаем новую характеристику "Номер сертификата"
		НовоеХар = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеХар.Наименование = "Номер сертификата";
	
		КС = Новый КвалификаторыСтроки(20);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Строка"));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
		НовоеХар.ТипЗначения = ОписаниеТиповС;
		
		НовоеХар.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры;
		
		НовоеХар.Записать();
				
		ЗаписьРС=РегистрыСведений.НазначенияСвойствОбъектов.СоздатьМенеджерЗаписи(); 
		ЗаписьРС.Объект = Справочники.Номенклатура.ПодарочныеСертификаты;
		ЗаписьРС.Свойство = НовоеХар.Ссылка;
		ЗаписьРС.Записать();
		ХарНомер =НовоеХар.Ссылка;
	КонецЕсли;	
	
ХарДата= ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Дата окончания",Истина);
Если Не ЗначениеЗаполнено(ХарДата) тогда
	
		// создаем новую характеристику "Дата"
		НовоеХар = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеХар.Наименование = "Дата окончания";
	
		КД = Новый КвалификаторыДаты(ЧастиДаты.Дата);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Дата"));
		НовоеХар.ТипЗначения =  Новый ОписаниеТипов(Массив,,КД);
 		
		НовоеХар.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры;
		
		НовоеХар.Записать();
				
		ЗаписьРС=РегистрыСведений.НазначенияСвойствОбъектов.СоздатьМенеджерЗаписи(); 
		ЗаписьРС.Объект = Справочники.Номенклатура.ПодарочныеСертификаты;
		ЗаписьРС.Свойство = НовоеХар.Ссылка;
		ЗаписьРС.Записать();
		
		ХарДата =НовоеХар.Ссылка;
КонецЕсли;
